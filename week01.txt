//https://leetcode-cn.com/problems/plus-one/
func plusOne(digits []int) []int {
    for i := len(digits) - 1; i >= 0; i--{
        digits[i]++
        digits[i] = digits[i] % 10
        if digits[i] != 0 {
            return digits
        }
    }
    return append([]int{1}, digits...)
}



//https://leetcode-cn.com/problems/merge-two-sorted-lists/
/**
 * Definition for singly-linked list.
 * type ListNode struct {
 *     Val int
 *     Next *ListNode
 * }
 */
func mergeTwoLists(l1 *ListNode, l2 *ListNode) *ListNode {
    preHead := &ListNode{
        0,
        nil,
    }
    prev := preHead
    for{
        if l1 == nil || l2 == nil{
            break
        }
        if l1.Val <= l2.Val{
            prev.Next = l1
            l1 = l1.Next
        }else{
            prev.Next = l2
            l2 = l2.Next
        }
        prev = prev.Next
    }
    if l1 == nil{
        prev.Next = l2
    }
    if l2 == nil{
        prev.Next = l1
    }
    return preHead.Next
}
